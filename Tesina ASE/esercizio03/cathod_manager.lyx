#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Anodes manager
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Descrivere la soluzione relizzata per mezzo di schematici e riportare il
 codice dei soli componenti significativi.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'obiettivo di tale componente è la gestione degli anodi relativi alle cifre
 del display.
 Dal momento che i singoli anodi relativi a ciascuna delle 4 cifre del display
 sono 0-attivi (la Nexys4 DDR utilizza i transistor per pilotare abbastanza
 corrente nel punto di anodo comune, le abilitazioni dell'anodo sono invertite),
 l'anodes manager dovrà attivare uno solo dei 4 diverso anodi mantenendo
 basso uno solo dei 4 bit relativi agli anodi, utilizzando in ingresso il
 valore fornito dal contatore.
 Il componente dovrà inoltre tenere conto del segnale enable in ingresso,
 che permette di attivare e disattivare manualmente i singoli anodi.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per realizzare l'anodes manager si è utilizzato un decoder 2-4: ricevuto
 in ingresso il valore del contatore, il decoder alza solo uno dei 4 bit
 relativi agli anodi.
 Tali uscite sono poi messe in AND con il segnale di enable per pilotare
 soltanto le digit che si è degiso di abilitare.
 Infine, i bit vengono invertiti per rispettare la logica 0-attiva.
 L'implementazione completa, effettuata tramite descrizione data-flow, è
 consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio03/design/anodes_manager.vhd}{%
\end_layout

\begin_layout Plain Layout

anodes
\backslash
_manager.vhd}
\end_layout

\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
E' interessante notare come, nell'implementazione del decoder, oltre alle
 4 possibili combinazioni di ingressi è stato aggiunto il caso 
\begin_inset Quotes eld
\end_inset

others
\begin_inset Quotes erd
\end_inset

, che genera in uscita tutti bit alti (che verranno poi negati successivamente).
 Tale tecnica serve ad evitare il fault masking, poiché avendo tutti 1 in
 uscita (caso non previsto dal normale funzionamento di un decoder) posso
 riconoscere subito la presenza di comportamenti imprevisti nel componente,
 che verrano poi manifestati all'esterno mostrando su tutte le digit lo
 stesso valore anche quando i valori dovrebbero essere diversi, perchè tutti
 gli anodi sono abilitati nello stesso istante.
 Una soluzione duale consisterebbe nello spegnere tutte le digit, basta
 sostituire x
\begin_inset Quotes erd
\end_inset

F
\begin_inset Quotes erd
\end_inset

 con x
\begin_inset Quotes erd
\end_inset

0
\begin_inset Quotes erd
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Implementazione data-flow dell'anodes
 manager.}]
\end_layout

\begin_layout Plain Layout

architecture dataflow of anodes_manager is   
\end_layout

\begin_layout Plain Layout

	signal anodes_swhitching : STD_LOGIC_VECTOR (3 downto 0) := (others =>
 '0');
\end_layout

\begin_layout Plain Layout

	begin     
\end_layout

\begin_layout Plain Layout

		anodes <= not anodes_swhitching OR not enable_digit;
\end_layout

\begin_layout Plain Layout

		with select_digit select anodes_swhitching <=       
\end_layout

\begin_layout Plain Layout

			x"1"    when "00",
\end_layout

\begin_layout Plain Layout

			x"2"    when "01",
\end_layout

\begin_layout Plain Layout

			x"4"    when "10",
\end_layout

\begin_layout Plain Layout

			x"8"    when "11",
\end_layout

\begin_layout Plain Layout

			x"F"    when others;
\end_layout

\begin_layout Plain Layout

end dataflow;
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset


\end_layout

\end_body
\end_document
