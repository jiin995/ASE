#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Approfondimento: Carry Select On Board
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Addizionatore Carry Select ulla board
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tra i vari addizionatori presentati, abbiamo deciso di sintetizzare sulla
 board il carry select.
\end_layout

\begin_layout Standard
In particolare, ricordando che l'fpga è pensata per sintetizzare macchine
 sincrone, si è realizzata una top level entity che utilizza dei registri
 per sostenere gli input in ingresso all'addizionatore e per sostenere il
 valore in ingresso alla batteria di display a 7 segmenti presenti sulla
 board.
\end_layout

\begin_layout Standard
Inoltre al si è deciso di sintetizzare sulla board non il classico addizionatore
, ma abbiamo sintetizzato la versione che prevede anche l'operazione di
 sottrazione, calcolando il complemento a due di uno degli operandi, come
 visto per il ripple carry.
\end_layout

\begin_layout Standard
L'interfaccia della top level entity è la seguente :
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Interfaccia top level entity .}]
\end_layout

\begin_layout Plain Layout

[...]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

entity carrySelect_addSub_onBoard is    
\end_layout

\begin_layout Plain Layout

			generic  (  M       : NATURAL :=  4;     
\end_layout

\begin_layout Plain Layout

			            P       : NATURAL :=  4     
\end_layout

\begin_layout Plain Layout

			);     
\end_layout

\begin_layout Plain Layout

			port 	(  clock 	  : in    STD_LOGIC ; 				
\end_layout

\begin_layout Plain Layout

						enable_a    : in	STD_LOGIC ; 			
\end_layout

\begin_layout Plain Layout

						enable_b	: in    STD_LOGIC ;             
\end_layout

\begin_layout Plain Layout

						subtract    : in    STD_LOGIC ; 				
\end_layout

\begin_layout Plain Layout

						input       : in    STD_LOGIC_VECTOR (((M*P)-1) downto 0) ; 			
\end_layout

\begin_layout Plain Layout

						overflow    : out   STD_LOGIC ;             
\end_layout

\begin_layout Plain Layout

						c_out       : out   STD_LOGIC ; 				
\end_layout

\begin_layout Plain Layout

						anodes 	 : out   STD_LOGIC_VECTOR (7 downto 0) ; 			
\end_layout

\begin_layout Plain Layout

						cathodes	: out   STD_LOGIC_VECTOR (7 downto 0)                   
           
\end_layout

\begin_layout Plain Layout

		    );
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

[...]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In ingresso non vediamo i due operandi che perchè utilizzando un addizzionatore
 a 16 bit non potevamo mappare gli le stringe in input sui i physical della
 board, gli switch sono proprio sedici.
 Per risolvere tale limite si è deciso di adottare la seguente logica, le
 stringe in ingresso sono sostenute da due registri con parallelismo di
 bit e l'ingresso di questi registri sono direttamente collegati agli switch,
 mentre i loro segnali di abilitazione sono mappati su due diversi bottoni
 della board.

\shape italic
 
\shape default
Pertanto l' operazione di addizione, prevede che si settano gli switch,
 si preme il bottone per caricare il valore nel registro del primo operando
 ( enable_a
\begin_inset Foot
status open

\begin_layout Plain Layout
Abilita il registro per caricare il dato presente in input ( switch ).
\end_layout

\end_inset

 ) e poi si ripete la procedura analoga per caricare il secondo operando
 premendo il pulsante associato a enable_b, dopo pochi instanti è disponibile
 sul display a 7 segmenti il risultato e se il led 15 si accende significa
 che durente l'operazione di somma o differenza si è verificato un overflow.
 Per effettuare una sottrazione basta premere il pulsante centrale sull'fpga,
 dove è mappato l'ingresso subtract che indica all'addizionatore di complementar
e il secondo operando e quindi di fare la sottrazione tra il primo operando
 e il secondo.
\end_layout

\begin_layout Standard
Di seguito il mapping dei pulsanti e dei led con l' I/O del componente di
 alto livello:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Interfaccia top level entity .}]
\end_layout

\begin_layout Plain Layout

[...]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# bottone centrale
\end_layout

\begin_layout Plain Layout

NET "subtract"           LOC=N17 | IOSTANDARD=LVCMOS33; #IO_L9P_T1_DQS_14
 
\end_layout

\begin_layout Plain Layout

# bottone sinistro
\end_layout

\begin_layout Plain Layout

NET "enable_a"           LOC=P17 | IOSTANDARD=LVCMOS33; #IO_L12P_T1_MRCC_14
 
\end_layout

\begin_layout Plain Layout

# bottone destro 
\end_layout

\begin_layout Plain Layout

NET "enable_b"           LOC=M17 | IOSTANDARD=LVCMOS33; #IO_L10N_T1_D15_14
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

## LEDs 
\end_layout

\begin_layout Plain Layout

# led 0 
\end_layout

\begin_layout Plain Layout

NET "c_out"	          LOC=H17 | IOSTANDARD=LVCMOS33; #IO_L18P_T2_A24_15
 
\end_layout

\begin_layout Plain Layout

#led 15 
\end_layout

\begin_layout Plain Layout

NET "overflow"           LOC=V11 | IOSTANDARD=LVCMOS33; #IO_L21N_T3_DQS_A06_D22_
14
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

[...]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'implementazione completa della versione con sottrattore del carry select
 è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio10/design/carrySelect_addSub.vhd}{%
\end_layout

\begin_layout Plain Layout

carrySelect
\backslash
_addSub.vhd}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
L'implementazione completa della top level_entity è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio10/design/carrySelect_addSub_on_board.vhd}{%
\end_layout

\begin_layout Plain Layout

carrySelect
\backslash
_addSub
\backslash
_on
\backslash
_board.vhd}
\end_layout

\end_inset

.
\end_layout

\end_body
\end_document
