#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Moltiplicatore di Robertson
\end_layout

\begin_layout Subsection
Architettura
\end_layout

\begin_layout Standard
Per poter realizzare un moltiplicatore di Robertson in grado di implementare
 l'algoritmo di Robertson si è fatto riferimento al modello PO/PC utilizzando
 i seguenti componenti:
\end_layout

\begin_layout Itemize
Unità di controllo
\end_layout

\begin_layout Itemize
Contatore
\end_layout

\begin_layout Itemize
Registro M (per contenere il moltiplicando X)
\end_layout

\begin_layout Itemize
Registri A e Q (per contenere rispettivamente i risultati parziali e il
 moltiplicatore Y)
\end_layout

\begin_layout Itemize
Un flip flop F
\end_layout

\begin_layout Itemize
Un addizionatore parallelo: Carry Select add/sub
\end_layout

\begin_layout Itemize
Porte XOR
\end_layout

\begin_layout Itemize
Un multiplexer
\end_layout

\begin_layout Standard
Lo schema strutturale è riportato in fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:architettura-robertson"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ph
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/architettura_robertson.png
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:architettura-robertson"

\end_inset

Architettura del moltiplicatore di Robertson.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Essendo il moltiplicatore di Robertson una macchina sequenziale, sono stati
 dapprima definiti gli stati della macchina per la realizzazione della parte
 di controllo.
 L'automa a stati finiti è raffigurato in fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:architettura-robertson-fsm"
plural "false"
caps "false"
noprefix "false"

\end_inset

 e prevede i seguenti stati:
\end_layout

\begin_layout Itemize
Idle: la macchina permane in questo stato finchè non giunge un segnale di
 
\shape italic
start;
\end_layout

\begin_layout Itemize
Init: in questo stato vengono inizializzati i registri e si resetta il contatore
;
\end_layout

\begin_layout Itemize
Choice: in questo stato si sceglie l'operazione da fare in base al valore
 di 
\shape italic
counter_hit, x_sign
\shape default
 e 
\shape italic
q0
\shape default
;
\end_layout

\begin_layout Itemize
Right_Shift: in questo stato viene effettuato lo shift dei registri A e
 Q e viene salvato il valore di 
\shape italic
x_sign
\shape default
;
\end_layout

\begin_layout Itemize
Add_Sub: in questo stato si effettua un'operazione di somma tra A (registro
 di accumulazione) ed M; nel caso in cui il moltiplicando X sia negativo
 e 
\shape italic
counter_hit 
\shape default
sia alto (fine dell'operazione di moltiplicazione) si effettuerà una sottrazione
 A-M (operazione di correzione).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ph
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/architettura_robertson_fsm.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:architettura-robertson-fsm"

\end_inset

Automa a stati finiti (moltiplicatore di Robertson).
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Implementazione
\end_layout

\begin_layout Standard
Per l'implementazione di tale componente si è utilizzata una descrizione
 di tipo structural, collegando opportunamene i componenti descritti precedentem
ente.
 In particolare si riporta l'interfaccia del componente moltiplicatore:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Implementazione del moltiplicatore
 di Robertson.}]
\end_layout

\begin_layout Plain Layout

entity robertson_multiplier is     
\end_layout

\begin_layout Plain Layout

	GENERIC (N : INTEGER :=  8);     
\end_layout

\begin_layout Plain Layout

	PORT (
\end_layout

\begin_layout Plain Layout

		X : in STD_LOGIC_VECTOR (N-1 downto 0);                 
\end_layout

\begin_layout Plain Layout

		Y : in STD_LOGIC_VECTOR (N-1 downto 0);                
\end_layout

\begin_layout Plain Layout

		start : in STD_LOGIC;                
\end_layout

\begin_layout Plain Layout

		clock : in STD_LOGIC;                
\end_layout

\begin_layout Plain Layout

		reset_n : in STD_LOGIC;                 
\end_layout

\begin_layout Plain Layout

		stop : out STD_LOGIC;                 
\end_layout

\begin_layout Plain Layout

		Z : out STD_LOGIC_VECTOR ((2*N)-1 downto 0));
\end_layout

\begin_layout Plain Layout

end robertson_multiplier;
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
L'implementazione completa del moltiplicatore è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio11/design/robertson_multiplier.vhd}{%
\end_layout

\begin_layout Plain Layout

robertson
\backslash
_multiplier.vhd}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
In particolare, per quanto riguarda la parte di controllo, questa è stata
 realizzata mediante una control_unit implementata come FSM in descrizione
 behavioural, seguendo l'automa a stati finiti visto precedentemente.
 Di seguito è riportato il comportamento della macchina nello stato di 
\shape italic
choice
\shape default
:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Implementazione dello stato di
 choice del moltiplicatore di Robertson.}]
\end_layout

\begin_layout Plain Layout

when choice => 						  
\end_layout

\begin_layout Plain Layout

	if counter_hit = '0' then                 	  		
\end_layout

\begin_layout Plain Layout

		if current_multiplicand = '0' then   								
\end_layout

\begin_layout Plain Layout

			nxt <= right_shift;               							  
\end_layout

\begin_layout Plain Layout

		else                                  								
\end_layout

\begin_layout Plain Layout

			nxt <= add_sub;                  							  
\end_layout

\begin_layout Plain Layout

		end if; 							
\end_layout

\begin_layout Plain Layout

	else                                      	
\end_layout

\begin_layout Plain Layout

		if x_sign = '0' then                  					
\end_layout

\begin_layout Plain Layout

		nxt <= idle;                         	
\end_layout

\begin_layout Plain Layout

	else                                      	
\end_layout

\begin_layout Plain Layout

		nxt <= add_sub;                      		
\end_layout

\begin_layout Plain Layout

		end if; 							
\end_layout

\begin_layout Plain Layout

	end if;
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
L'intera implementazione dell'unita di controllo del moltiplicatore di Robertson
 è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio11/design/robertson_control_unit.vhd}{%
\end_layout

\begin_layout Plain Layout

robertson
\backslash
_control
\backslash
_unit.vhd}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\end_body
\end_document
