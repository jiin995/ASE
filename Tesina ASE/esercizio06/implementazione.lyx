#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{tikzpicture}
\end_preamble
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Implementazione
\end_layout

\begin_layout Subsection
Implementazione con descrizione a doppio processo (Moore)
\end_layout

\begin_layout Standard
Si è deciso di realizzare una macchina di Moore per il riconoscimento della
 sequenza '1011001'.
 L'automa a stati finiti realizzato è rappresentato in fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:automa-moore"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ph
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/automa_moore.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:automa-moore"

\end_inset

Automa a stati finiti della macchina (Moore).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per l'implementazione di questo automa in VHDL, si è deciso di utilizzare
 una descrizione di tipo behavioural e si è lasciato ad ISE la scelta della
 codifica degli stati.
 In particolare, si definito un tipo stato e si è utilizzata la tecnica
 con due processi per l'implementazione di una FSM:
\end_layout

\begin_layout Itemize

\shape italic
update_state
\shape default
, che si occupa di aggiornare lo stato corrente ad ogni colpo di clock;
\end_layout

\begin_layout Itemize

\shape italic
choose_next_state
\shape default
, che rappresenta la parte combinatoria della macchina, atta a determinare
 lo stato prossimo e l'uscita usando un costrutto 
\shape italic
case
\shape default
;
\end_layout

\begin_layout Standard
Tale scelta, sebbene renda il codice meno compatto, risulta più facilmente
 leggibile nella parte di determinazione dello stato prossimo.
 Si noti come, essendo questa una macchina di Moore, la determinazione dell'usci
ta dipende solamente dallo stato in cui si trova la macchina: in particolare,
 come osservabile anche nel codice, l'uscita sarà alta solamente quando
 la macchina avrà rilevato l'intera stringa.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Determinazione dell'uscita in VHDL
 (Moore).}]
\end_layout

\begin_layout Plain Layout

type state_type is (init, s1,s10, s101, s1011, s10110, s101100, s1011001);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

when s1011001 => 		
\end_layout

\begin_layout Plain Layout

	value_out <= '1';	
\end_layout

\begin_layout Plain Layout

	if value_in = '0' then
\end_layout

\begin_layout Plain Layout

		next_state <= init;
\end_layout

\begin_layout Plain Layout

	else 
\end_layout

\begin_layout Plain Layout

		next_state <= s1; 		
\end_layout

\begin_layout Plain Layout

end if;
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'implementazione completa è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio06/design/fsm_moore.vhd}{%
\end_layout

\begin_layout Plain Layout

fsm
\backslash
_moore.vhd}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Implementazione con guardie (Mealy)
\end_layout

\begin_layout Standard
Si è deciso di realizzare tale macchina anche come Mealy: in particolare,
 dal momento che in questa implementazione l'uscita dipende dall'ingresso
 e dallo stato corrente, il valore in uscita sarà 1 quando, trovandoci nello
 stato s101100, si riceve in ingresso il valore 1.
 Fatto ciò, è stato dunque possibile rimuovere lo stato s1011001 ed aggiungere
 due transizioni da s101100 a init a fronte degli ingressi 0 e 1, quest'ultima
 con uscita alta.
 L'automa a stati finiti realizzato è rappresentato in fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:automa-mealy"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ph
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/automa_mealy.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:automa-mealy"

\end_inset

Automa a stati finiti della macchina (Mealy).
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per l'implementazione di questo automa in VHDL, si è ricorso all'utilizzo
 di costrutti di assegnazione con guardia e funzione di risoluzione.
 In particolare, sono stati utilizzati due guardie innestate: quella esterna
 per far commutare lo stato solo sul fronte di salita del clock e quelle
 interne per determinare stato corrente e uscita in funzione degli ingressi.
 La funzione di risoluzione, invece, permette di determinare lo stato 
\shape italic
current_state 
\shape default
in caso di assegnazioni concorrenti (si sceglie lo stato più a sinistra
 nel vettore degli stati concorrenti).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Determinazione dell'uscita in VHDL
 (Moore).}]
\end_layout

\begin_layout Plain Layout

function one_of (source: state_vector) return state is			
\end_layout

\begin_layout Plain Layout

	begin 		
\end_layout

\begin_layout Plain Layout

		return source(source'left);		
\end_layout

\begin_layout Plain Layout

end one_of; 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

signal current_state: one_of state register := init;	
\end_layout

\begin_layout Plain Layout

	begin 	
\end_layout

\begin_layout Plain Layout

		clocking: block (clock='1' and not clock'stable)			
\end_layout

\begin_layout Plain Layout

			begin 			
\end_layout

\begin_layout Plain Layout

				q0: block (current_state=init and guard)			
\end_layout

\begin_layout Plain Layout

					begin 				
\end_layout

\begin_layout Plain Layout

						current_state<= guarded s1 when x='1' else init; 				
\end_layout

\begin_layout Plain Layout

				end block q0;
\end_layout

\begin_layout Plain Layout

			[...]
\end_layout

\begin_layout Plain Layout

	end block clocking; 
\end_layout

\begin_layout Plain Layout

[...]
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset

L'implementazione completa è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio06/design/fsm_mealy.vhd}{%
\end_layout

\begin_layout Plain Layout

fsm
\backslash
_mealy.vhd}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
