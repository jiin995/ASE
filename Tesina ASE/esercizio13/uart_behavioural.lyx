#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{tikzpicture}
\end_preamble
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Realizzazione behavioural
\end_layout

\begin_layout Standard
Per implementare il protocollo UART sulla board Nexys 4 è stato utilizzato
 il codice fornito.
 Le due entità 
\shape italic
uart_rx 
\shape default
e 
\shape italic
uart_tx
\shape default
 sono state realizzate tramite descrizione 
\shape italic
behavioural.
 Uart_tx
\shape default
, che si occupa della trasmissione, è stata realizzata come fsm con 4 stati:
 
\end_layout

\begin_layout Itemize
idle - stato iniziale di pausa, in cui si permane finché non bisogna trasmettere
 un byte;
\end_layout

\begin_layout Itemize
start - stato di preparazione, in cui si trasmette un segnale basso per
 iniziare la trasmissione;
\end_layout

\begin_layout Itemize
send - stato di trasmissione, in cui si inviano i singoli bit del byte mantenend
oli sulla linea per 16 ticks;
\end_layout

\begin_layout Itemize
stop - stato di fine trasmissione, in cui si invia il segnale di stop (di
 durata 
\shape italic
stop_ticks
\shape default
) prima di tornare in idle.
\end_layout

\begin_layout Standard

\shape italic
Uart_rx, 
\shape default
invece, 
\end_layout

\begin_layout Itemize
idle - stato iniziale di pausa, in cui si permane finché non si abbassa
 il segnale di mark;
\end_layout

\begin_layout Itemize
start - stato di preparazione, in cui si stabilisce l'offset del contatore
 dei tick per il campionamento dei bit ricevuti;
\end_layout

\begin_layout Itemize
receive - stato di ricezione, in cui si campionano i singoli bit del byte
 ricevuti ogni 16 ticks;
\end_layout

\begin_layout Itemize
stop - stato di fine trasmissione, in cui si aspetta il segnale di stop
 (di durata 
\shape italic
stop_ticks
\shape default
) prima di tornare in idle.
\end_layout

\begin_layout Standard
Tale implementazione non è di tipo commerciale, in quanto non prevede la
 possibilità di effettuare un controllo di parità né di utilizzare alcun
 tipo di controllo di flusso.
 Le implementazioni complete delle entity sono consultabili qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio13/design/uart_behavioural/uart_rx.vhd}{%
\end_layout

\begin_layout Plain Layout

uart
\backslash
_rx.vhd}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio13/design/uart_behavioural/uart_tx.vhd}{%
\end_layout

\begin_layout Plain Layout

uart
\backslash
_tx.vhd}
\end_layout

\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Dopodiché è stata realizzata la top level entity 
\shape italic
uart
\shape default
, in grado sia di trasmettere che di ricevere.
 Per impostare i valori in ingresso e in uscita alle due entità, si sono
 usati dei buffer I/O con un flag per indicare se il buffer in ingresso
 è pieno o se quello in uscita è vuoto.
 Lo schema della top level entity è visualizzabile in fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:architettura-uart"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 
\begin_inset Float figure
placement ph
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/architettura_uart.png
	scale 10

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:architettura-uart"

\end_inset

Architettura dell'UART.
\end_layout

\end_inset


\end_layout

\end_inset

L'implementazione completa è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio13/design/uart_behavioural/uart.vhd}{%
\end_layout

\begin_layout Plain Layout

uart.vhd}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
On board
\end_layout

\begin_layout Standard
Per testare il funzionamento dell'UART sulla board, si è deciso di effettuare
 una comunicazione seriale da PC a board.
 Sulla board è stata sintetizzata l'entità 
\shape italic
uart_onBoard
\shape default
, su cui è stata istanziato il componente 
\shape italic
uart
\shape default
: si sono utilizzate le linee di ricezione e di trasmissione del convertitore
 FT2232HQ della board, collegate alle porte D4 e C4, per poter usare UART
 con una connessione USB (fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ft2232hq"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ph
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/ft2232hq.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ft2232hq"

\end_inset

Convertitore FT2232HQ UART-USB.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ai fini del test, si è scelto di far coincidere il buffer di ricezione con
 quello di invio, in modo tale da far funzionare la board con un comportamento
 
\begin_inset Quotes eld
\end_inset

echo
\begin_inset Quotes erd
\end_inset

 (la board rispedisce ciò che riceve).
 Per fare ciò, si è settato 
\shape italic
din
\shape default
 pari a 
\shape italic
dout
\shape default
 e 
\shape italic
wr_uart
\shape default
 pari all'inverso di 
\shape italic
rx_empty
\shape default
:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Istanza di UART in uart_onBoard.}]
\end_layout

\begin_layout Plain Layout

uart_inst : uart port map ( 	
\end_layout

\begin_layout Plain Layout

		clock => clock,  										
\end_layout

\begin_layout Plain Layout

		reset => reset, 										
\end_layout

\begin_layout Plain Layout

		rx => rx, 										
\end_layout

\begin_layout Plain Layout

		rx_empty => rx_empty_int, 										
\end_layout

\begin_layout Plain Layout

		tx => tx, 										
\end_layout

\begin_layout Plain Layout

		wr_uart => not rx_empty_int, 										
\end_layout

\begin_layout Plain Layout

		din => dout,	 										
\end_layout

\begin_layout Plain Layout

		tx_full => tx_full_int, 										
\end_layout

\begin_layout Plain Layout

		rd_uart => not tx_full_int, 										
\end_layout

\begin_layout Plain Layout

		dout => dout 								
\end_layout

\begin_layout Plain Layout

);
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\backslash
selectlanguage{italian}%
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Sul PC invece si è effettuata la comunicazione UART con la board tramite
 l'utilizzo di un semplice terminale.
 Prima di tutto, con 
\shape italic
sudo stty -F /dev/ttyUSB1 9600
\shape default
 si setta il baud rate appropriato.
 Dopodiché per trasmettere si utilizza il comando 
\shape italic
printf 
\begin_inset Quotes eld
\end_inset

messaggio
\begin_inset Quotes erd
\end_inset

 > /dev/ttyUSB1
\shape default
 per scrivere una stringa sul file relativo alla connessione USB alla board
 collegata.
 Per controllare i messaggi ricevuti dalla board, invece, si utilizza 
\shape italic
tail -f /dev/ttyUSB1
\shape default
 per leggere le ultime righe dello stesso file.
 Il risultato della simulazione è visibile in fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:test_uart"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Si noti inoltre come si sia utilizzato il display a 7 segmenti per visualizzare
 il messaggio: in particolare, possiamo osservare l'ultimo carattere ricevuto
 in codifica esadecimale ASCII.
 Ad esempio, inviando 
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

, il display mostrerà 
\begin_inset Quotes eld
\end_inset

61
\begin_inset Quotes erd
\end_inset

.
 
\begin_inset Float figure
placement ph
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/test_uart.png
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:test_uart"

\end_inset

Test di comunicazione UART PC-board.
\end_layout

\end_inset


\end_layout

\end_inset

L'implementazione completa è consultabile qui: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{run:./esercizio13/design/uart_behavioural/uart_onBoard.vhd}{%
\end_layout

\begin_layout Plain Layout

uart
\backslash
_onBoard.vhd}
\end_layout

\end_inset

.
\end_layout

\end_body
\end_document
